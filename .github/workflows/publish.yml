name: Publish

on:
  push:
    tags:
      - 'v*'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  release:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Print Tag
        run: |
          echo $RELEASE_VERSION
          echo ${{ env.RELEASE_VERSION }}

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: '10.x'

      - name: Install Dependencies
        run: npm i

      - name: Build Static
        run: npm run build

      - name: zip dist
        run: |
          sudo apt install zip
          zip -r dist.zip dist

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Dist
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./dist.zip
          asset_name: dist.zip
          asset_content_type: application/gzip

      - name: release to npm
        run: npm run release --npm_token=${{ secrets.NPM_TOKEN }}
        env:
          CI: true
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # - name: Generate ChangeLog
      #   run: |
      #     npm i -g github-release-from-changelog
      #     github-release-from-changelog
      #   env:
      #     GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

  # deploy:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@master
  #     - run: npm i
  #     - run: yarn run build
  #     # - run: yarn run tsc
  #     - name: Build and Deploy
  #       uses: JamesIves/github-pages-deploy-action@3.7.1
  #       with:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         BRANCH: gh-pages # The branch the action should deploy to.
  #         FOLDER: dist # The folder the action should deploy.
  #         CLEAN: true # Automatically remove deleted files from the deploy branch
